// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  tasks Task[]
  tags  Tag[]

  @@map("users")
}

model Task {
  id          String    @id @default(cuid())
  title       String
  description String?
  priority    Priority  @default(MEDIUM)
  status      Status    @default(PENDING)
  dueDate     DateTime?
  userId      String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // Relations
  user     User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  taskTags TaskTag[]

  @@map("tasks")
}

model Tag {
  id     String @id @default(cuid())
  name   String
  color  String @default("#3B82F6")
  userId String
  createdAt DateTime @default(now())

  // Relations
  user     User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  taskTags TaskTag[]

  @@unique([name, userId])
  @@map("tags")
}

model TaskTag {
  taskId String
  tagId  String

  // Relations
  task Task @relation(fields: [taskId], references: [id], onDelete: Cascade)
  tag  Tag  @relation(fields: [tagId], references: [id], onDelete: Cascade)

  @@id([taskId, tagId])
  @@map("task_tags")
}

enum Priority {
  HIGH
  MEDIUM
  LOW
}

enum Status {
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELLED
}
